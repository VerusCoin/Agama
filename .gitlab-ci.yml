stages:
  - build
  - test
  - deploy
variables:
  DOCKER_DRIVER: overlay2
  AGAMA_VERSION: 0.3.13
  EASYDEX_GUI_BUILD: build.tar.gz
  ELECTRON_BUILD_LINUX: Agama-linux-x64
  ELECTRON_BUILD_WINDOWS: Agama-win32-x64
  ELECTRON_BUILD_OSX: Agama-darwin-x64
  AGAMA_LINUX: ${ELECTRON_BUILD_LINUX}-v${AGAMA_VERSION}-beta.tar.gz
  AGAMA_WINDOWS: ${ELECTRON_BUILD_WINDOWS}-v${AGAMA_VERSION}-beta.zip
  AGAMA_OSX: ${ELECTRON_BUILD_OSX}-v${AGAMA_VERSION}-beta.tar.gz
  GIT_SUBMODULE_STRATEGY: recursive


build:linux:
  image: asherd/agama-builder
  stage: build
  before_script:
  - echo "$AUTH_KEY" > AUTH_KEY.json
  - gcloud auth activate-service-account --key-file AUTH_KEY.json
  - rm AUTH_KEY.json
  - gsutil cp $STAGING/EasyDEX-GUI/$CI_COMMIT_REF_NAME/$EASYDEX_GUI_BUILD .
  - tar -xzf $EASYDEX_GUI_BUILD --directory gui/EasyDEX-GUI/react
  - rm $EASYDEX_GUI_BUILD
  - mkdir -p assets/bin/
  script:
  - npm install electron-packager -g
  - npm install electron -g --unsafe-perm=true
  - npm install
  - ./buildscripts/electron-build-linux.sh
  - cd build
  - tar -czf $AGAMA_LINUX $ELECTRON_BUILD_LINUX
  - mv $AGAMA_LINUX ..
  artifacts:
    paths: [$AGAMA_LINUX]
    expire_in: 1 week


build:windows:
  stage: build
  image: asherd/agama-builder:windows
  before_script:
  - echo $AUTH_KEY > AUTH_KEY.json
  - gcloud auth activate-service-account --key-file AUTH_KEY.json
  - rm AUTH_KEY.json
  - gsutil cp $STAGING/EasyDEX-GUI/$CI_COMMIT_REF_NAME/$EASYDEX_GUI_BUILD .
  - tar -xzf $EASYDEX_GUI_BUILD --directory gui/EasyDEX-GUI/react
  - rm $EASYDEX_GUI_BUILD
  - mkdir -p assets/bin/
  script:
  - npm install electron-packager -g
  - npm install electron -g --unsafe-perm=true
  - npm install
  - ./buildscripts/electron-build-windows.sh
  - cd build
  - zip -r $AGAMA_WINDOWS $ELECTRON_BUILD_WINDOWS
  - mv $AGAMA_WINDOWS ..
  artifacts:
    paths: [$AGAMA_WINDOWS]
    expire_in: 1 week


build:mac:
  stage: build
  image: asherd/agama-builder
  before_script:
  - echo "$AUTH_KEY" > AUTH_KEY.json
  - gcloud auth activate-service-account --key-file AUTH_KEY.json
  - rm AUTH_KEY.json
  - gsutil cp $STAGING/EasyDEX-GUI/$CI_COMMIT_REF_NAME/$EASYDEX_GUI_BUILD .
  - tar -xzf $EASYDEX_GUI_BUILD --directory gui/EasyDEX-GUI/react
  - rm $EASYDEX_GUI_BUILD
  - mkdir -p assets/bin/
  script:
  - npm install electron-packager -g
  - npm install electron -g --unsafe-perm=true
  - npm install
  - ./buildscripts/electron-build-osx.sh
  - cd build
  - tar -czf $AGAMA_OSX $ELECTRON_BUILD_OSX
  - mv $AGAMA_OSX ..
  artifacts:
    paths: [$AGAMA_OSX]
    expire_in: 1 week

deploy:
  stage: deploy
  image: google/cloud-sdk:alpine
  dependencies:
  - build:linux
  - build:windows
  - build:mac
  script:
  - mkdir -p $CI_COMMIT_REF_NAME/Windows
  - mkdir -p $CI_COMMIT_REF_NAME/Linux
  - mkdir -p $CI_COMMIT_REF_NAME/MacOS
  - mv $AGAMA_LINUX $CI_COMMIT_REF_NAME/Linux
  - mv $AGAMA_WINDOWS $CI_COMMIT_REF_NAME/Windows
  - mv $AGAMA_OSX $CI_COMMIT_REF_NAME/MacOS
  - echo $AUTH_KEY > AUTH_KEY.json
  - gcloud auth activate-service-account --key-file AUTH_KEY.json
  - gsutil rsync -r $CI_COMMIT_REF_NAME $STAGING/Agama/$CI_COMMIT_REF_NAME/
  - curl -X POST
      -F token="$CI_JOB_TOKEN"
      -F ref=master
      -F variables\[CLI_VERSION\]="$AGAMA_VERSION"
      -F variables\[AGAMA_VERSION\]="$AGAMA_VERSION"
      "https://gitlab.com/api/v4/projects/8018638/trigger/pipeline"

sudo: required
os: linux
dist: xenial
language: node_js
node_js:
- lts/*
env:
  global:
  - BUILD_VERSION=0.04
  - CCACHE_SIZE=100M
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - CCACHE_COMPRESS=1
  - AGAMA_VERSION=0.3.1
cache:
  apt: true
  directories:
  - "$HOME/google-cloud-sdk/"
  - "$HOME/.ccache"
matrix:
  fast_finish: true
  include:
  - env: BUILD_ICONS=assets/icons/agama_icons/128x128.png IGNORE_OS_ASSETS_1=assets/bin/osx
      IGNORE_OS_ASSETS_2=assets/bin/win64 TARGET_PLATFORM=linux BUILD_DIR=Agama-linux-x64
      ARTIFACT_SET=Linux64 BUILD_VARIANT=linux64 BUILD_SCRIPT=electron-build-linux.sh
  - env: BUILD_ICONS=assets/icons/agama_icons/agama_app_icon.ico IGNORE_OS_ASSETS_1=assets/bin/osx
      IGNORE_OS_ASSETS_2=assets/bin/linux64 TARGET_PLATFORM=win32 BUILD_DIR=Agama-win32-x64
      PACKAGES=winehq-devel ARTIFACT_SET=Win64 BUILD_VARIANT=win64 BUILD_SCRIPT=electron-build-windows.sh
before_install:
- openssl aes-256-cbc -K $encrypted_a41fbd06a4b9_key -iv $encrypted_a41fbd06a4b9_iv
  -in AUTH_KEY.json.enc -out AUTH_KEY.json -d
- npm install electron-packager -g && npm install electron -g --unsafe-perm=true &&
  npm install
- gcloud auth activate-service-account --key-file AUTH_KEY.json
- rm AUTH_KEY.json && rm AUTH_KEY.json.enc
- mkdir -p assets/bin/$BUILD_VARIANT
- gsutil cp gs://$BUCKET/$EXECUTABLES/$TRAVIS_BRANCH/$BUILD_VARIANT.tar.gz . || gsutil
  cp gs://$BUCKET/$EXECUTABLES/master/$BUILD_VARIANT.tar.gz .
- tar -xzvf $BUILD_VARIANT.tar.gz && rm $BUILD_VARIANT.tar.gz
- if [ "$BUILD_VARIANT" != "linux64" ]; then gsutil cp gs://$BUCKET/$ARTIFACTS/$ARTIFACT_SET.tar.gz .
  && tar -xzvf $ARTIFACT_SET.tar.gz && rm $ARTIFACT_SET.tar.gz && cp -r $ARTIFACT_SET
  $BUILD_VARIANT && rm -rf $ARTIFACT_SET; fi
- cp -rvf $BUILD_VARIANT/* assets/bin/$BUILD_VARIANT && rm -rf $BUILD_VARIANT
- cd gui/EasyDEX-GUI/react && gsutil cp gs://$BUCKET/EasyDEX-GUI/$TRAVIS_BRANCH/build.tar.gz
  .
- tar -xzvf build.tar.gz && rm build.tar.gz
- cd ../../..
install:
- if [ -n "$PACKAGES" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list;
  fi
- if [ -n "$PACKAGES" ]; then sudo dpkg --add-architecture i386 && wget -nc https://dl.winehq.org/wine-builds/Release.key;
  fi
- if [ -n "$PACKAGES" ]; then sudo apt-key add Release.key; fi
- if [ -n "$PACKAGES" ]; then sudo apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/;
  fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update && sudo apt-get -y
  install --install-recommends -qq $PACKAGES; fi
- npm install
script:
 - ./buildscripts/$BUILD_SCRIPT
after_script:
- if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then cd build && tar -czf $BUILD_DIR.tar.gz
  $BUILD_DIR && gsutil cp $BUILD_DIR.tar.gz gs://$BUCKET/$PROJECT/$TRAVIS_BRANCH/;
  fi
notifications:
  slack:
    secure: tHddHa3l8QixuywIMOrSmsFfk3vGTcLXu/49IpDgYoO8IhZ91Ux6jBX1y9bK8mFwmjNzMUZBB4bH23JzQyv1JekQaihzCL4m5Ut8gcDRStUplO4Aye16DPTWzhy+UQYzkYwP/lEeTU/lNE/QEq7tC7nMbHn2kY9sC9dr5wHmBsGCeIB49ikaL2MdJThP0/9NFaBK/Z7eOmnd/l/76x2Vji2OvBYjjkCPPRE5bZ8Vvw6S/fA2abNirD3ymB9w7ooL4HzbZZw6gxKDSU0RcK8YCvYuDoEMDgcq//VEpZE852hmo9Pxs/LArcunztFmaoXxngwMejDM2VuDSELq/ytP/XpyTWC/bmOz+07BbPpUjZiu8psnxVerBt8l6oO34xU6R4U9JaqNdALJyMTO7gs9j53hZfi2Onr+/nxyJ9ec1gkJBzdIOnOxlZYXJOmuAtWBnoa5DvJvED9DBICIpkeTPzSJXMggAGDNHWmm4CoB1oHUbKUg3C5G7AGB63oHX9tDZ0A21ZOhMGx4DItQ6C7bH9FSp1FfA5CsnCO56JRaon+QF/vIO4y0OV+3QAL59kBDmy6P7VSzsGB07JApYJ/e9iLS2vXisSr6hM03rynSvVcfJHcDfP/b/fzLcleIWwnel0F1Dz0A5VF39g9S/NYo1Ttt+MphnWfKl+Za6Rp8z/M=
